<item>
  <name>umezo hentai key mapping</name>
  <list>
    <item>
        <name>Command_R to Control_L</name>
        <sysctl>remap.umezo_command_r_to_control_l</sysctl>
        <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
    </item>
    <item>
      <name># KANA/EISUU 1</name>
      <sysctl>remap.umezo_kana_eisuu2kana_1</sysctl>
      <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA , VK_SHIFT, KeyCode::SHIFT_L , ModifierFlag::SHIFT_L, KeyCode::JIS_KANA</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::SHIFT_L , ModifierFlag::SHIFT_L, KeyCode::JIS_EISUU</autogen>
      <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
      <autogen>--KeyToKey-- KeyCode::JIS_KANA , KeyCode::ESCAPE</autogen>
    </item>

    
    <item>
      <name># Ctrl_L</name>
      <sysctl>remap.umezo_ctrl_l</sysctl>
      <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>


    <item>
      <name># CMD+z/x/c/v/n/w/t </name>
      <sysctl>remap.umezo_basic_shortcuts</sysctl>
      <block>
        <not>TERMINAL</not>
        <not>VI</not>
        <not>VIRTUALMACHINE</not>
        <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::Z, VK_CONTROL, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        <autogen>--KeyToKey-- KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
      </block>
    </item>

    <item>
      <name># vi mode</name>
      <appendix>Ctrl+HJKL to move</appendix>
      <sysctl>remap.umezo_vi_mode</sysctl>
      <block>
        <not>TERMINAL</not>
        <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
        <autogen>--KeyToKey-- KeyCode::J, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
        <autogen>--KeyToKey-- KeyCode::K, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
        <autogen>--KeyToKey-- KeyCode::L, VK_CONTROL, KeyCode::CURSOR_RIGHT </autogen>
      </block>
    </item>

    <item>
      <name># extra vi mode</name>
      <appendix>u/i to BS/del</appendix>
      <sysctl>remap.umezo_vi_extra_mode</sysctl>
      <block>
        <not>TERMINAL</not>
        <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL, KeyCode::DELETE</autogen>
        <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
      </block>
    </item>

    <item>
        <name># aaa space vi mode only terminal</name>
        <appendix>u/i to BS/del</appendix>
        <sysctl>remap.umezo_space_vi_mode</sysctl>
        <block>
            <not>VIRTUALMACHINE</not>
            <not>REMOTEDESKTOPCONNECTION</not>
            <autogen>--KeyToKey-- KeyCode::U, VK_OPTION, KeyCode::DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::I, VK_OPTION, KeyCode::FORWARD_DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::H, VK_OPTION, KeyCode::CURSOR_LEFT</autogen>
            <autogen>--KeyToKey-- KeyCode::J, VK_OPTION, KeyCode::CURSOR_DOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::K, VK_OPTION, KeyCode::CURSOR_UP</autogen>
            <autogen>--KeyToKey-- KeyCode::L, VK_OPTION, KeyCode::CURSOR_RIGHT </autogen>
            <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </block>
    </item>

    <item>
        <name>#VM setting</name>
        <appendix>for vm</appendix>
        <sysctl>remap.umezo_item_for_vm</sysctl>
        <block>
            <only>VIRTUALMACHINE</only>
            <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
            <autogen>--KeyToKey-- KeyCode::J, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::K, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
            <autogen>--KeyToKey-- KeyCode::L, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
            <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL, KeyCode::DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::SPACE , ModifierFlag::CONTROL_L</autogen>
        </block>
    </item>

    <item>
      <name>KeyToKey (Combination)</name>
      <appendix>A to B,C (Standard)</appendix>
      <appendix>B to A,B,Shift_L+C,D,Control_L+P (Key To)</appendix>
      <appendix>C to JIS_KANA,A,I,JIS_EISUU,U (Key To with Japanese)</appendix>
      <appendix>Shift_L to A,B,Control_L+B,Shift_L+C,D (Modifier To)</appendix>
      <appendix>Control+D to Shift_L+A, Control_L+F (Key+Modifier To)</appendix>
      <sysctl>remap.samples_keytokey_combination</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::B, KeyCode::C</autogen>
      <autogen>--KeyToKey-- KeyCode::B, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::D, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
      <autogen>--KeyToKey-- KeyCode::C, KeyCode::JIS_KANA, KeyCode::A, KeyCode::I, KeyCode::JIS_EISUU, KeyCode::U</autogen>
      <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::D</autogen>
    </item>






    <item>
      <name>KeyOverlaidModifier</name>
      <appendix>A to Shift_L (When type only, send Space) (Standard)</appendix>
      <appendix>Option_L to Shift_L (When type only, send Space) (Modifier)</appendix>
      <appendix>Control+B to Shift_L (When type only, send Space) (Key+Modifier)</appendix>
      <appendix>C to Shift_L (When type only, send Space) + [KeyRepeat]</appendix>
      <appendix>Command+D to Shift_L (When type only, send Control_L+F) + [KeyRepeat]</appendix>
      <appendix>E to KeyCode::VK_NONE</appendix>
      <appendix>F to Shift_L (When type only, send CapsLock)</appendix>
      <appendix>G to Shift_L (When type only, send A,B,Shift_L+C,Control_L+B)</appendix>
      <appendix>H to Shift_L (When type only, send A,B,Shift_L+C,Control_L+B) + [KeyRepeat]</appendix>
      <appendix>I to Shift_L (When type only, send Option_L)</appendix>
      <sysctl>remap.samples_keyoverlaidmodifier</sysctl>
      <autogen>--KeyOverlaidModifier-- KeyCode::A, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::B, VK_CONTROL, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
      <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::C, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
      <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::D, VK_COMMAND, KeyCode::SHIFT_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
      <autogen>--KeyToKey-- KeyCode::E, KeyCode::VK_NONE</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::F, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
      <autogen>--KeyOverlaidModifier--           KeyCode::G, KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
      <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::H, KeyCode::SHIFT_L, KeyCode::A, KeyCode::B, KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::I, KeyCode::SHIFT_L, KeyCode::OPTION_L</autogen>
    </item>


    <item>
      <name>DoublePressModifier</name>
      <appendix>Shift_L x 2 to RETURN</appendix>
      <sysctl>remap.samples_doublepressmodifier</sysctl>
      <autogen>--DoublePressModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
    </item>


    <item>
      <name>SimultaneousKeyPresses</name>
      <appendix>(A+J to Down)</appendix>
      <appendix>(A+K to Up)</appendix>
      <appendix>(A+S to A,S,A,J)</appendix>
      <appendix>(A+D to A,Shift_L+S,Control_L+D,F)</appendix>
      <appendix>(A+G to Shift_L)</appendix>
      <appendix>(Shift_L+Shift_R to Space)</appendix>
      <sysctl>remap.samples_simultaneouskeypresses</sysctl>
      <autogen>--SimultaneousKeyPresses-- KeyCode::J, KeyCode::A, KeyCode::CURSOR_DOWN</autogen>
      <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::A, KeyCode::CURSOR_UP</autogen>
      <autogen>--SimultaneousKeyPresses-- KeyCode::S, KeyCode::A, KeyCode::A, KeyCode::S, KeyCode::A, KeyCode::J</autogen>
      <autogen>--SimultaneousKeyPresses-- KeyCode::D, KeyCode::A, KeyCode::A, KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::F</autogen>
      <autogen>--SimultaneousKeyPresses-- KeyCode::G, KeyCode::A, KeyCode::SHIFT_L</autogen>
      <autogen>--SimultaneousKeyPresses-- KeyCode::SHIFT_L, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
    </item>




    <!-- application only -->
    <item>
      <name>application</name>
      <appendix>A to B if application == TERMINAL (KeyToKey)</appendix>
      <appendix>A to C if application != TERMINAL (KeyToKey)</appendix>
      <appendix>Volume Mute to B if application == TERMINAL (ConsumerToKey)</appendix>
      <appendix>Volume Mute to C if application != TERMINAL (ConsumerToKey)</appendix>
      <sysctl>remap.samples_application</sysctl>
    </item>

    <!-- KeyboardType only -->
    <item>
      <name>KeyboardType only</name>
      <appendix>A to B if KeyboardType == KeyboardType::MACBOOK or MACBOOK_3_1</appendix>
      <appendix>A to C if KeyboardType != KeyboardType::MACBOOK and MACBOOK_3_1</appendix>
      <sysctl>remap.samples_keyboardtype</sysctl>
      <block>
        <keyboardtype_only>MACBOOK, MACBOOK_3_1</keyboardtype_only>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::B</autogen>
      </block>
      <block>
        <keyboardtype_not>MACBOOK,MACBOOK_3_1</keyboardtype_not>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::C</autogen>
      </block>
    </item>

    <!-- Device only -->
    <item>
      <name>Device only</name>
      <appendix>A to B if (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
      <appendix>A to C unless (VendorID,ProductID) == (0x5ac,0x21a) or (0x5ac,0x222)</appendix>
      <appendix>* (0x5ac,0x21a) is MacBookPro2,1</appendix>
      <appendix>* (0x5ac,0x222) is Apple Aluminum Keyboard (JIS)</appendix>
      <sysctl>remap.samples_device</sysctl>
      <block>
        <device_only>DeviceVendorID(0x5ac),DeviceProductID(0x21a), DeviceVendorID(0x5ac),DeviceProductID(0x222)</device_only>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::B</autogen>
      </block>
      <block>
        <device_not>DeviceVendorID(0x5ac),DeviceProductID(0x21a), DeviceVendorID(0x5ac),DeviceProductID(0x222)</device_not>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::C</autogen>
      </block>
    </item>

    <!-- Config only -->
    <item>
      <name>Config only</name>
      <sysctl>remap.samples_config</sysctl>
      <appendix>A to 1 if samples_config_mode1 == active</appendix>
      <appendix>B to 2 if samples_config_mode1 or samples_config_mode2 == active</appendix>
      <appendix>A to 3 if samples_config_mode1 != active</appendix>
      <appendix>B to 4 if samples_config_mode1 and samples_config_mode2 != active</appendix>
      <appendix>C to 5</appendix>
      <block>
        <config_only>option.samples_config_mode1</config_only>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::KEY_1</autogen>
      </block>
      <block>
        <config_only>option.samples_config_mode1, option.samples_config_mode2</config_only>
        <autogen>--KeyToKey-- KeyCode::B, KeyCode::KEY_2</autogen>
      </block>
      <block>
        <config_not>option.samples_config_mode1</config_not>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::KEY_3</autogen>
      </block>
      <block>
        <config_not>option.samples_config_mode1, option.samples_config_mode2</config_not>
        <autogen>--KeyToKey-- KeyCode::B, KeyCode::KEY_4</autogen>
      </block>
      <block>
        <autogen>--KeyToKey-- KeyCode::C, KeyCode::KEY_5</autogen>
      </block>
    </item>
    <item>
      <name>Config only mode1</name>
      <sysctl>option.samples_config_mode1</sysctl>
    </item>
    <item>
      <name>Config only mode2</name>
      <sysctl>option.samples_config_mode2</sysctl>
    </item>

    <!-- inputmode only -->
    <item>
      <name>inputmode_only (Japanese)</name>
      <appendix>ASDFG to AIUEO if inputmode == INPUTMODE_JAPANESE</appendix>
      <sysctl>remap.samples_jis_asdfg2aiueo</sysctl>
      <inputmode_only>INPUTMODE_JAPANESE</inputmode_only>
      <autogen>--KeyToKey-- KeyCode::S, KeyCode::I</autogen>
      <autogen>--KeyToKey-- KeyCode::D, KeyCode::U</autogen>
      <autogen>--KeyToKey-- KeyCode::F, KeyCode::E</autogen>
      <autogen>--KeyToKey-- KeyCode::G, KeyCode::O</autogen>
    </item>
    <item>
      <name>inputmode_only (Chinese Traditional)</name>
      <appendix>A to Space if inputmode == INPUTMODE_CHINESE_TRADITIONAL</appendix>
      <sysctl>remap.samples_tradchinese_a2space</sysctl>
      <inputmode_only>INPUTMODE_CHINESE_TRADITIONAL</inputmode_only>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>inputmode_only (Chinese Simplified)</name>
      <appendix>A to Space if inputmode == INPUTMODE_CHINESE_SIMPLIFIED</appendix>
      <sysctl>remap.samples_simpchinese_a2space</sysctl>
      <inputmode_only>INPUTMODE_CHINESE_SIMPLIFIED</inputmode_only>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>inputmode_only (Korean)</name>
      <appendix>A to Space if inputmode == INPUTMODE_KOREAN</appendix>
      <sysctl>remap.samples_korean_a2space</sysctl>
      <inputmode_only>INPUTMODE_KOREAN</inputmode_only>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::SPACE</autogen>
    </item>
    <item>
      <name>inputmodedetail_only</name>
      <appendix>ASDFG to AIUEO if inputmodedetail == INPUTMODE_DETAIL_JAPANESE_KATAKANA</appendix>
      <sysctl>remap.samples_jis_asdfg2aiueo_katakana</sysctl>
      <inputmodedetail_only>INPUTMODE_DETAIL_JAPANESE_KATAKANA</inputmodedetail_only>
      <autogen>--KeyToKey-- KeyCode::S, KeyCode::I</autogen>
      <autogen>--KeyToKey-- KeyCode::D, KeyCode::U</autogen>
      <autogen>--KeyToKey-- KeyCode::F, KeyCode::E</autogen>
      <autogen>--KeyToKey-- KeyCode::G, KeyCode::O</autogen>
    </item>

    <!-- block -->
    <item>
      <name>block sample</name>
      <appendix>A to B if application == TERMINAL (KeyToKey)</appendix>
      <appendix>B to D if application == TERMINAL (KeyToKey)</appendix>
      <appendix>A to C if application != TERMINAL (KeyToKey)</appendix>
      <appendix>B to E if application != TERMINAL (KeyToKey)</appendix>
      <appendix>Shift+C to Y</appendix>
      <appendix>Shift+D to Z</appendix>
      <appendix>C to 1 if application == TERMINAL (KeyToKey), keyboardType == MACBOOK</appendix>
      <appendix>C to 2 if application == TERMINAL (KeyToKey), keyboardType != MACBOOK</appendix>
      <appendix>C to 3 if application != TERMINAL (KeyToKey), keyboardType == MACBOOK</appendix>
      <appendix>C to 4 if application != TERMINAL (KeyToKey), keyboardType != MACBOOK</appendix>
      <sysctl>remap.samples_block</sysctl>
      <block>
        <only>TERMINAL</only>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::B</autogen>
        <autogen>--KeyToKey-- KeyCode::B, KeyCode::D</autogen>
      </block>
      <block>
        <not>TERMINAL</not>
        <autogen>--KeyToKey-- KeyCode::A, KeyCode::C</autogen>
        <autogen>--KeyToKey-- KeyCode::B, KeyCode::E</autogen>
      </block>
      <autogen>--KeyToKey-- KeyCode::C, VK_SHIFT, KeyCode::Y</autogen>
      <autogen>--KeyToKey-- KeyCode::D, VK_SHIFT, KeyCode::Z</autogen>
      <block>
        <only>TERMINAL</only>
        <block>
          <keyboardtype_only>MACBOOK</keyboardtype_only>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::KEY_1</autogen>
        </block>
        <block>
          <keyboardtype_not>MACBOOK</keyboardtype_not>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::KEY_2</autogen>
        </block>
      </block>
      <block>
        <not>TERMINAL</not>
        <block>
          <keyboardtype_only>MACBOOK</keyboardtype_only>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::KEY_3</autogen>
        </block>
        <block>
          <keyboardtype_not>MACBOOK</keyboardtype_not>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::KEY_4</autogen>
        </block>
      </block>
    </item>

    <!-- Virtual KeyCode -->
    <item>
      <name>VK_MODIFIER_EXTRA1</name>
      <appendix>Use A as ModifierFlag::EXTRA1</appendix>
      <appendix>Use D as ModifierFlag::EXTRA5</appendix>
      <appendix>Use F as ModifierFlag::EXTRA5 (When type only, send Space)</appendix>
      <appendix>EXTRA1+S to B</appendix>
      <appendix>EXTRA5+S to C</appendix>
      <sysctl>remap.samples_modifier_extra1</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_MODIFIER_EXTRA1</autogen>
      <autogen>--KeyToKey-- KeyCode::D, KeyCode::VK_MODIFIER_EXTRA5</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::F, KeyCode::VK_MODIFIER_EXTRA5, KeyCode::SPACE</autogen>
      <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::EXTRA1, KeyCode::B</autogen>
      <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::EXTRA5, KeyCode::C</autogen>
    </item>
    <item>
      <name>VK_LOCK_FN</name>
      <appendix>Use A to numlock</appendix>
      <sysctl>remap.samples_a2numlock</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_LOCK_FN</autogen>
    </item>
    <item>
      <name>VK_LOCK_COMMAND_R</name>
      <appendix>Use A to Command_R Lock</appendix>
      <sysctl>remap.samples_a2commandRlock</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_LOCK_COMMAND_R</autogen>
    </item>
    <item>
      <name>VK_CHANGE_INPUTMODE_*</name>
      <appendix>Use 1 to VK_CHANGE_INPUTMODE_ENGLISH</appendix>
      <appendix>Use 2 to VK_CHANGE_INPUTMODE_FRENCH</appendix>
      <appendix>Use 3 to VK_CHANGE_INPUTMODE_GERMAN</appendix>
      <appendix>Use 4 to VK_CHANGE_INPUTMODE_JAPANESE</appendix>
      <appendix>Use 5 to VK_CHANGE_INPUTMODE_SWEDISH</appendix>
      <appendix>Use 6 to VK_CHANGE_INPUTMODE_CANADIAN</appendix>
      <appendix>Use 7 to VK_CHANGE_INPUTMODE_RUSSIAN</appendix>
      <sysctl>remap.samples_vk_change_inputmode</sysctl>
      <autogen>--KeyToKey-- KeyCode::KEY_1, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_2, KeyCode::VK_CHANGE_INPUTMODE_FRENCH</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_3, KeyCode::VK_CHANGE_INPUTMODE_GERMAN</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_4, KeyCode::VK_CHANGE_INPUTMODE_JAPANESE</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_5, KeyCode::VK_CHANGE_INPUTMODE_SWEDISH</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_6, KeyCode::VK_CHANGE_INPUTMODE_CANADIAN</autogen>
      <autogen>--KeyToKey-- KeyCode::KEY_7, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
    </item>
    <item>
      <name>VK_CONFIG</name>
      <appendix>Use A to toggle Complete Vi Mode</appendix>
      <appendix>Use S to turn on Complete Vi Mode</appendix>
      <sysctl>remap.samples_vk_config</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
      <autogen>--KeyToKey-- KeyCode::S, KeyCode::VK_CONFIG_FORCE_ON_notsave_complete_vimode</autogen>
    </item>
    <item>
      <name>VK_JIS_TOGGLE_EISUU_KANA</name>
      <appendix>A to KANA/EISUU (toggle)</appendix>
      <appendix>Command_L to KANA/EISUU (toggle)</appendix>
      <appendix>Command_R to Command_R (When type only, send send KANA/EISUU (toggle))</appendix>
      <sysctl>remap.samples_vk_jis_toggle_eisuu_kana</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
    </item>
    <item>
      <name>VK_JIS_EISUU_x2</name>
      <appendix>Use T as EISUU x2</appendix>
      <sysctl>remap.samples_t2eisuu_x2</sysctl>
      <autogen>--KeyToKey-- KeyCode::T, KeyCode::VK_JIS_EISUU_x2</autogen>
    </item>
    <item>
      <name>VK_JIS_KANA_x2</name>
      <appendix>Use Y as KANA x2</appendix>
      <sysctl>remap.samples_y2kana_x2</sysctl>
      <autogen>--KeyToKey-- KeyCode::Y, KeyCode::VK_JIS_KANA_x2</autogen>
    </item>
    <item>
      <name>VK_JIS_BACKSLASH</name>
      <appendix>Use A as JIS_BACKSLASH</appendix>
      <sysctl>remap.samples_a2jisbackslash</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_JIS_BACKSLASH</autogen>
    </item>
    <item>
      <name>VK_JIS_TEMPORARY_ROMAN</name>
      <appendix>Use A as A,VK_JIS_TEMPORARY_ROMAN,I,U</appendix>
      <appendix>Use B as VK_JIS_TEMPORARY_ROMAN,A,I,U</appendix>
      <sysctl>remap.samples_vk_jis_temporary_roman</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_ROMAN, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      <autogen>--KeyToKey-- KeyCode::B, KeyCode::VK_JIS_TEMPORARY_ROMAN, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
    </item>
    <item>
      <name>VK_JIS_TEMPORARY_HIRAGANA</name>
      <appendix>Use A as A,VK_JIS_TEMPORARY_HIRAGANA,I,U</appendix>
      <appendix>Use B as VK_JIS_TEMPORARY_HIRAGANA,A,I,U</appendix>
      <sysctl>remap.samples_vk_jis_temporary_hiragana</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_HIRAGANA, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      <autogen>--KeyToKey-- KeyCode::B, KeyCode::VK_JIS_TEMPORARY_HIRAGANA, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
    </item>
    <item>
      <name>VK_JIS_TEMPORARY_KATAKANA</name>
      <appendix>Use A as A,VK_JIS_TEMPORARY_KATAKANA,I,U</appendix>
      <appendix>Use B as VK_JIS_TEMPORARY_KATAKANA,A,I,U</appendix>
      <sysctl>remap.samples_vk_jis_temporary_katakana</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_KATAKANA, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      <autogen>--KeyToKey-- KeyCode::B, KeyCode::VK_JIS_TEMPORARY_KATAKANA, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
    </item>
    <item>
      <name>VK_JIS_TEMPORARY_AINU</name>
      <appendix>Use A as A,VK_JIS_TEMPORARY_AINU,I,U</appendix>
      <appendix>Use B as VK_JIS_TEMPORARY_AINU,A,I,U</appendix>
      <sysctl>remap.samples_vk_jis_temporary_ainu</sysctl>
      <autogen>--KeyToKey-- KeyCode::A, KeyCode::A, KeyCode::VK_JIS_TEMPORARY_AINU, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
      <autogen>--KeyToKey-- KeyCode::B, KeyCode::VK_JIS_TEMPORARY_AINU, KeyCode::A, KeyCode::I, KeyCode::U, KeyCode::VK_JIS_TEMPORARY_RESTORE</autogen>
    </item>
  </list>
</item>
